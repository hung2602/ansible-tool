namespace: {{ Cluster_Name }}
scope: {{ Cluster_Name }}
name: {{ ansible_fqdn }}

restapi:
    listen: 0.0.0.0:8008
    connect_address: {{ ansible_default_ipv4.address }}:8008

etcd3:
    host: {{ ansible_default_ipv4.address }}:2379

bootstrap:
  # this section will be written into Etcd:/<namespace>/<scope>/config after initializing new cluster
  dcs:
    ttl: 30
    loop_wait: 10
    retry_timeout: 10
    maximum_lag_on_failover: 1048576
    slots:
      percona_cluster_1:
        type: physical

    postgresql:
      use_pg_rewind: true
      use_slots: true
      parameters:
        max_connections: 1000
        wal_level: replica
        hot_standby: on
        wal_keep_segments: 10
        max_wal_senders: 5
        max_replication_slots: 10
        wal_log_hints: on
        logging_collector: 'on'

  # some desired options for 'initdb'
  initdb:  # Note: It needs to be a list (some options need values, others are switches)
  - encoding: UTF8
  - data-checksums

  pg_hba:  # Add following lines to pg_hba.conf after running 'initdb'
  - local  all            postgres               peer
  - local  all            all                    peer
  - host   all            all       0.0.0.0/0    md5
  - host   all            all       ::1/128      md5
  - host replication replicator 127.0.0.1/32 trust
  - host replication replicator 0.0.0.0/0 md5

  # Additional script to be launched after initial cluster creation (will be passed the connection URL as parameter)
# post_init: /usr/local/bin/setup_cluster.sh
  # Some additional users users which needs to be created after initializing new cluster
  users:
      admin:
          password: {{ password_pg }}
          options:
              - createrole
              - createdb
      percona:
          password: {{ password_pg }}
          options:
              - createrole
              - createdb

postgresql:
    cluster_name: cluster_1
    listen: 0.0.0.0:5432
    connect_address: {{ ansible_default_ipv4.address }}:5432
    data_dir: /var/lib/postgresql/16/main
    bin_dir: /usr/lib/postgresql/16/bin
    pgpass: /tmp/pgpass
    authentication:
        replication:
            username: replicator
            password: {{ password_pg }}
        superuser:
            username: postgres
            password: {{ password_pg }}
    parameters:
        unix_socket_directories: /var/run/postgresql/
    create_replica_methods:
        - basebackup
    basebackup:
        checkpoint: 'fast'

tags:
    nofailover: false
    noloadbalance: false
    clonefrom: false
    nosync: false